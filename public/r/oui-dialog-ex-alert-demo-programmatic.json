{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "oui-dialog-ex-alert-demo-programmatic",
  "type": "registry:component",
  "registryDependencies": [
    "https://oui.mw10013.workers.dev/r/oui-button.json",
    "https://oui.mw10013.workers.dev/r/oui-dialog-ex-alert.json"
  ],
  "files": [
    {
      "path": "registry/components/oui-dialog-ex-alert-demo-programmatic.tsx",
      "content": "import {\n  DialogExAlertProvider,\n  useDialogExAlert,\n} from \"@/registry/components/oui-dialog-ex-alert\";\nimport { Button } from \"@/registry/components/ui/oui-button\";\n\nexport default function Component() {\n  return (\n    <DialogExAlertProvider>\n      <ProgrammaticAlert />\n    </DialogExAlertProvider>\n  );\n}\n\nfunction ProgrammaticAlert() {\n  const alertDialog = useDialogExAlert();\n\n  // Use .then() to handle promise since onPress expects void return\n  const handleConfirm = () => {\n    void alertDialog\n      .show({\n        title: \"Are you sure?\",\n        children: \"This action cannot be undone.\",\n        confirmLabel: \"Delete\",\n      })\n      .then((confirmed) => {\n        if (confirmed) {\n          console.log(\"Confirmed!\");\n        } else {\n          console.log(\"Cancelled!\");\n        }\n      });\n  };\n  return (\n    <Button variant=\"outline\" onPress={handleConfirm}>\n      DialogExAlert Programmatic\n    </Button>\n  );\n}\n",
      "type": "registry:component"
    }
  ],
  "meta": {
    "tags": [
      "dialog",
      "dialog-ex-alert"
    ],
    "alignment": "flex-center"
  }
}