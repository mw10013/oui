{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "oui-switch-ex",
  "type": "registry:component",
  "registryDependencies": [
    "https://oui-production.mw10013.workers.dev/r/oui-base.json",
    "https://oui-production.mw10013.workers.dev/r/oui-switch.json",
    "https://oui-production.mw10013.workers.dev/r/oui-text.json"
  ],
  "files": [
    {
      "path": "registry/components/oui-switch-ex.tsx",
      "content": "import React from \"react\";\nimport { composeTailwindRenderProps } from \"@/registry/components/ui/oui-base\";\nimport { Switch, SwitchIndicator } from \"@/registry/components/ui/oui-switch\";\nimport { Text } from \"@/registry/components/ui/oui-text\";\nimport * as Rac from \"react-aria-components\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport interface SwitchExProps extends Rac.SwitchProps {\n  indicatorPosition?: \"start\" | \"end\";\n  indicatorClassName?: string;\n  descriptionClassName?: string;\n  description?: React.ReactNode;\n  containerClassName?: string;\n}\n\nexport function SwitchEx({\n  indicatorPosition = \"start\",\n  className,\n  indicatorClassName,\n  descriptionClassName,\n  description,\n  children,\n  containerClassName,\n  ...props\n}: SwitchExProps) {\n  const descriptionId = description ? React.useId() : undefined;\n  return (\n    // Derived fromshadcn FormDemo div\n    <div className={twMerge(\"flex flex-col gap-0.5\", containerClassName)}>\n      <Switch\n        {...props}\n        className={composeTailwindRenderProps(className, [\n          \"peer\",\n          indicatorPosition === \"end\" && \"justify-between\",\n        ])}\n        aria-describedby={descriptionId}\n      >\n        {(renderProps) => (\n          <>\n            {indicatorPosition === \"start\" && (\n              <SwitchIndicator className={indicatorClassName} />\n            )}\n            {typeof children === \"function\" ? children(renderProps) : children}\n            {indicatorPosition === \"end\" && (\n              <SwitchIndicator className={indicatorClassName} />\n            )}\n          </>\n        )}\n      </Switch>\n      {description && (\n        <Text\n          id={descriptionId}\n          slot=\"description\"\n          className={twMerge(\n            \"peer-data-[disabled]:opacity-60\",\n            descriptionClassName,\n          )}\n        >\n          {description}\n        </Text>\n      )}\n    </div>\n  );\n}\n\nexport default function Component() {\n  return <div className=\"p-4\">SwitchEx</div>;\n}\n",
      "type": "registry:component"
    }
  ],
  "meta": {
    "tags": [
      "switch"
    ]
  }
}