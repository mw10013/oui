{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "oui-slider",
  "type": "registry:ui",
  "dependencies": [
    "react-aria-components"
  ],
  "registryDependencies": [
    "https://oui.mw10013.workers.dev/r/oui-base.json"
  ],
  "files": [
    {
      "path": "registry/components/ui/oui-slider.tsx",
      "content": "\"use client\";\n\nimport React from \"react\";\nimport {\n  composeTailwindRenderProps,\n  disabledStyles,\n  focusVisibleStyles,\n} from \"@/registry/components/ui/oui-base\";\nimport * as Rac from \"react-aria-components\";\n\n// TODO: Slider: vertical, multiple\nexport function Slider({ className, ...props }: Rac.SliderProps) {\n  return (\n    <Rac.Slider\n      {...props}\n      className={composeTailwindRenderProps(\n        className,\n        \"group flex w-full flex-col gap-2\",\n      )}\n    ></Rac.Slider>\n  );\n}\n\nexport function SliderOutput({ className, ...props }: Rac.SliderOutputProps) {\n  return (\n    <Rac.SliderOutput\n      {...props}\n      className={composeTailwindRenderProps(\n        className,\n        \"text-sm font-medium tabular-nums\",\n      )}\n    ></Rac.SliderOutput>\n  );\n}\n\nexport interface SliderTrackProps\n  extends Omit<Rac.SliderTrackProps, \"children\">,\n    Rac.SliderTrackProps {\n  children?: React.ReactNode;\n}\n\nexport function SliderTrack({\n  className,\n  children,\n  ...props\n}: SliderTrackProps) {\n  return (\n    <Rac.SliderTrack\n      className={composeTailwindRenderProps(className, [disabledStyles, \"h-4\"])}\n      {...props}\n    >\n      {({ state }) => (\n        <>\n          <div className=\"absolute top-[50%] h-1.5 w-full translate-y-[-50%] rounded-full bg-primary/20\" />\n          <div\n            className=\"absolute top-[50%] h-1.5 translate-y-[-50%] rounded-full bg-primary\"\n            style={{\n              width: `${String(state.getThumbPercent(0) * 100)}%`,\n            }}\n          />\n          {children}\n        </>\n      )}\n    </Rac.SliderTrack>\n  );\n}\n\nexport function SliderThumb({ className, ...props }: Rac.SliderThumbProps) {\n  return (\n    <Rac.SliderThumb\n      {...props}\n      className={composeTailwindRenderProps(className, [\n        focusVisibleStyles,\n        \"top-[50%] size-4 rounded-full border border-primary/50 bg-background shadow transition-colors data-disabled:opacity-100\",\n      ])}\n    ></Rac.SliderThumb>\n  );\n}\n",
      "type": "registry:ui"
    }
  ]
}