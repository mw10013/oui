{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "oui-button",
  "type": "registry:ui",
  "dependencies": [
    "react-aria-components",
    "class-variance-authority",
    "tailwind-merge"
  ],
  "registryDependencies": [
    "https://oui.mw10013.workers.dev/r/oui-base.json"
  ],
  "files": [
    {
      "path": "registry/components/ui/oui-button.tsx",
      "content": "import type { VariantProps } from \"class-variance-authority\";\nimport { cva } from \"class-variance-authority\";\nimport * as Rac from \"react-aria-components\";\nimport { twMerge } from \"tailwind-merge\";\nimport { disabledStyles, focusVisibleStyles } from \"@/registry/components/ui/oui-base\";\n\n/**\n * Derived from shadcn Button.\n * Rac.Button does not support aria-invalid or have data-invalid.\n */\nexport const buttonVariants = cva(\n  [\n    focusVisibleStyles,\n    disabledStyles,\n    \"inline-flex shrink-0 items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all [&_svg:not([class*='size-'])]:size-4 [&_svg]:pointer-events-none [&_svg]:shrink-0\",\n  ],\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs data-[hovered]:bg-primary/90\",\n        destructive:\n          \"bg-destructive shadow-xs data-[hovered]:bg-destructive/90 data-[focus-visible]:ring-destructive/20 dark:data-[focus-visible]:ring-destructive/40 dark:bg-destructive/60 text-white\",\n        outline:\n          \"bg-background shadow-xs data-[hovered]:bg-accent data-[hovered]:text-accent-foreground dark:bg-input/30 dark:border-input dark:data-[hovered]:bg-input/50 border\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs data-[hovered]:bg-secondary/80\",\n        ghost:\n          \"data-[hovered]:bg-accent data-[hovered]:text-accent-foreground dark:data-[hovered]:bg-accent/50\",\n        link: \"text-primary underline-offset-4 data-[hovered]:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 gap-1.5 rounded-md px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n);\n\n/**\n * Returns a className function to style a React Aria Component as a button.\n *\n * @example\n * <Link\n *   href=\"#\"\n *   className={buttonClassName({ variant: \"outline\" })}\n * >\n *   Button Link\n * </Link>\n */\nexport const buttonClassName =\n  ({className, ...props}: VariantProps<typeof buttonVariants> & { className?: string }) =>\n  // The renderProps type omits variant props (variant, size) from the buttonVariants parameters,\n  // resulting in the RAC render props (isHovered, isPressed, etc.) for compatibility across components.\n  (\n    renderProps: Omit<\n      Parameters<typeof buttonVariants>[0],\n      keyof VariantProps<typeof buttonVariants>\n    >,\n  ) =>\n    twMerge(buttonVariants({ ...renderProps, ...props, className }));\n\nexport interface ButtonProps\n  extends Rac.ButtonProps,\n    VariantProps<typeof buttonVariants> {}\n\nexport function Button({ className, variant, size, ...props }: ButtonProps) {\n  return (\n    <Rac.Button\n      data-slot=\"button\"\n      className={Rac.composeRenderProps(className, (className, renderProps) =>\n        twMerge(\n          buttonVariants({\n            ...renderProps,\n            variant,\n            size,\n            className,\n          }),\n        ),\n      )}\n      {...props}\n    />\n  );\n}\n",
      "type": "registry:ui"
    }
  ]
}