{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "list-box",
  "type": "registry:ui",
  "title": "List Box",
  "description": "React aria components List Box with shadcn characteristics.",
  "dependencies": [
    "react-aria-components",
    "lucide-react",
    "tailwind-merge"
  ],
  "registryDependencies": [
    "https://oui.mw10013.workers.dev/r/base.json"
  ],
  "files": [
    {
      "path": "registry/default/ui/oui-list-box.tsx",
      "content": "\"use client\";\n\n/**\n * @fileoverview ListBox components for the Oui UI library.\n *\n * This module provides styled ListBoxItem components but intentionally does not\n * provide a styled ListBox wrapper. The Rac.ListBox component is used directly\n * without additional styling for the following reasons:\n *\n * 1. **Context-Dependent Styling**: ListBox containers are often used in different\n *    contexts (standalone lists, dropdowns, sidebars, pagination) where styling\n *    needs vary significantly. A single styled wrapper would be too restrictive.\n *\n * 2. **Minimal Container Role**: The ListBox component primarily handles behavior\n *    (keyboard navigation, selection, accessibility) rather than visual presentation.\n *    Visual styling is typically applied to the items themselves or the parent container.\n *\n * 3. **Flexibility**: By not providing a styled wrapper, users can apply their own\n *    container styles or use the ListBox in unstyled contexts.\n *\n * 4. **Common Usage Patterns**: In most cases, ListBox is used within other\n *    components like Select, ComboBox, or Popover, where the container styling\n *    is handled by the parent component.\n *\n * @example\n * // Standalone list with custom `container` styling\n * <div className=\"max-h-64 overflow-auto border rounded-md\">\n *   <Rac.ListBox aria-label=\"Options\" selectionMode=\"single\">\n *     <ListBoxItem>Option 1</ListBoxItem>\n *     <ListBoxItem>Option 2</ListBoxItem>\n *   </Rac.ListBox>\n * </div>\n *\n * @example\n * // Within a Select dropdown (container styled by Popover)\n * <Select>\n *   <SelectButton>Select an option</SelectButton>\n *   <Popover>\n *     <Rac.ListBox items={options}>\n *       {(item) => <ListBoxItem>{item.name}</ListBoxItem>}\n *     </Rac.ListBox>\n *   </Popover>\n * </Select>\n *\n * @example\n * // Horizontal pagination (custom wrapper for specific use case)\n * <ListBoxExPagination>\n *   <ListBoxItemExPagination>1</ListBoxItemExPagination>\n *   <ListBoxItemExPagination>2</ListBoxItemExPagination>\n * </ListBoxExPagination>\n */\nimport {\n  composeTailwindRenderProps,\n  disabledStyles,\n  focusVisibleStyles,\n} from \"@/registry/default/ui/oui-base\";\nimport { Check } from \"lucide-react\";\nimport * as Rac from \"react-aria-components\";\n\n/** Styles derived from shadcn SelectItem.\n * https://github.com/adobe/react-spectrum/issues/7601\n */\nexport function ListBoxItem<T extends object>({\n  className,\n  children,\n  ...props\n}: Rac.ListBoxItemProps<T>) {\n  return (\n    <Rac.ListBoxItem\n      {...props}\n      textValue={\n        props.textValue ?? (typeof children === \"string\" ? children : undefined)\n      }\n      className={composeTailwindRenderProps(className, [\n        focusVisibleStyles,\n        disabledStyles,\n        \"relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-none select-none\",\n        \"[&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 [&_svg:not([class*='text-'])]:text-muted-foreground\",\n        \"data-focused:bg-accent data-focused:text-accent-foreground\",\n        \"data-hovered:bg-accent data-hovered:text-accent-foreground\",\n      ])}\n    >\n      {Rac.composeRenderProps(children, (children, renderProps) => (\n        <>\n          {renderProps.isSelected && (\n            <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n              <Check className=\"size-4\" />\n            </span>\n          )}\n          {children}\n        </>\n      ))}\n    </Rac.ListBoxItem>\n  );\n}\n",
      "type": "registry:ui"
    }
  ],
  "meta": {
    "tags": [
      "list-box"
    ]
  }
}