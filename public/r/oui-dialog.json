{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "oui-dialog",
  "type": "registry:ui",
  "title": "Dialog",
  "description": "React aria components Dialog with shadcn characteristics.",
  "dependencies": [
    "react-aria-components",
    "lucide-react",
    "class-variance-authority",
    "tailwind-merge"
  ],
  "registryDependencies": [
    "@oui/oui-button",
    "@oui/oui-heading",
    "@oui/oui-modal"
  ],
  "files": [
    {
      "path": "registry/default/ui/oui-dialog.tsx",
      "content": "\"use client\";\n\nimport { XIcon } from \"lucide-react\";\nimport * as Rac from \"react-aria-components\";\nimport { twJoin, twMerge } from \"tailwind-merge\";\n\nexport interface DialogProps extends Rac.DialogProps {\n  /**\n   * If `true`, hides the close button for non-'alertdialog' role.\n   * 'alertdialog' role never shows a close button.\n   * @default false\n   */\n  hideCloseButtonForNonAlert?: boolean;\n}\n\n/**\n * Derived from shadcn DialogContent.\n */\nexport function Dialog({\n  hideCloseButtonForNonAlert = false,\n  className,\n  children,\n  ...props\n}: DialogProps) {\n  return (\n    <Rac.Dialog\n      className={twMerge(\"grid gap-4 outline-none\", className)}\n      {...props}\n    >\n      {(renderProps) => (\n        <>\n          {typeof children === \"function\" ? children(renderProps) : children}\n          {!hideCloseButtonForNonAlert && props.role !== \"alertdialog\" && (\n            <Rac.Button\n              slot=\"close\"\n              className={twJoin(\n                \"absolute top-4 right-4 rounded-sm p-1 opacity-70 transition-opacity\",\n                \"data-hovered:bg-accent data-hovered:text-muted-foreground data-hovered:opacity-100\",\n                \"data-focus-visible:ring-2 data-focus-visible:ring-ring data-focus-visible:ring-offset-2 data-focus-visible:ring-offset-background data-focus-visible:outline-none\",\n                \"data-disabled:pointer-events-none\",\n              )}\n            >\n              <XIcon className=\"size-4\" />\n              <span className=\"sr-only\">Close</span>\n            </Rac.Button>\n          )}\n        </>\n      )}\n    </Rac.Dialog>\n  );\n}\n\n/**\n * Derived from shadcn DialogHeader\n */\nexport function DialogHeader({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      {...props}\n      className={twMerge(\n        \"flex flex-col gap-2 text-center sm:text-left\",\n        className,\n      )}\n    />\n  );\n}\n\n/**\n * Derived from shadcn DialogFooter\n */\nexport function DialogFooter({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      {...props}\n      className={twMerge(\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\n        className,\n      )}\n    />\n  );\n}\n\n/**\n * Derived from shadcn DialogDescription\n */\nexport function DialogDescription({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLParagraphElement>) {\n  return (\n    <p\n      {...props}\n      className={twMerge(\"text-sm text-muted-foreground\", className)}\n    />\n  );\n}\n",
      "type": "registry:ui"
    }
  ],
  "meta": {
    "tags": [
      "dialog",
      "modal",
      "heading"
    ]
  }
}