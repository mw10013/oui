{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "react-router-theme-toggle-button",
  "type": "registry:component",
  "dependencies": [
    "remix-themes"
  ],
  "registryDependencies": [
    "@oui/toggle-button"
  ],
  "files": [
    {
      "path": "registry/default/components/oui-react-router-theme-toggle-button.tsx",
      "content": "\"use client\";\n\nimport { ToggleButton } from \"@/registry/default/ui/oui-toggle-button\";\nimport { Moon, Sun } from \"lucide-react\";\nimport { Theme, useTheme } from \"remix-themes\";\n\nexport default function ReactRouterThemeToggleButton() {\n  const [theme, setTheme, metadata] = useTheme();\n\n  const smartToggle = () => {\n    // https://github.com/cosscom/coss/blob/14591a5215ddbba462b5173dcea81977a9dc608f/apps/origin/components/theme-toggle.tsx\n    /* The smart toggle by @nrjdalal */\n    const prefersDarkScheme = window.matchMedia(\n      \"(prefers-color-scheme: dark)\",\n    ).matches;\n    if (metadata.definedBy === \"SYSTEM\") {\n      setTheme(prefersDarkScheme ? Theme.LIGHT : Theme.DARK);\n    } else if (\n      (theme === Theme.LIGHT && !prefersDarkScheme) ||\n      (theme === Theme.DARK && prefersDarkScheme)\n    ) {\n      setTheme(theme === Theme.LIGHT ? Theme.DARK : Theme.LIGHT);\n    } else {\n      setTheme(null);\n    }\n  };\n\n  return (\n    <ToggleButton\n      isSelected={metadata.definedBy === \"SYSTEM\"}\n      onChange={smartToggle}\n      aria-label=\"Toggle dark mode\"\n      variant=\"ghost\"\n    >\n      <Sun className=\"dark:hidden\" />\n      <Moon className=\"hidden dark:block\" />\n    </ToggleButton>\n  );\n}\n",
      "type": "registry:component"
    }
  ],
  "meta": {
    "tags": [
      "toggle-button",
      "react-router",
      "theme"
    ],
    "canPreview": true,
    "alignment": "flex-center"
  }
}