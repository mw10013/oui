{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "disclosure",
  "type": "registry:ui",
  "title": "Disclosure",
  "description": "React aria components Disclosure with shadcn characteristics.",
  "dependencies": [
    "react-aria-components",
    "lucide-react"
  ],
  "registryDependencies": [
    "@oui/heading"
  ],
  "files": [
    {
      "path": "registry/default/ui/oui-disclosure.tsx",
      "content": "\"use client\";\n\nimport {\n  composeTailwindRenderProps,\n  disabledStyles,\n  focusVisibleStyles,\n} from \"@/registry/default/ui/oui-base\";\nimport { ChevronDown } from \"lucide-react\";\nimport * as Rac from \"react-aria-components\";\n\n/**\n * Derived from shadcn AccordionItem\n */\nexport function Disclosure({ className, ...props }: Rac.DisclosureProps) {\n  return (\n    <Rac.Disclosure\n      className={composeTailwindRenderProps(\n        className,\n        \"group border-b last:border-b-0\",\n      )}\n      {...props}\n    />\n  );\n}\n\n/**\n * Derived from shadcn AccordionTrigger\n */\nexport function DisclosureButton({\n  className,\n  children,\n  ...props\n}: Rac.ButtonProps) {\n  return (\n    <Rac.Button\n      slot=\"trigger\"\n      className={composeTailwindRenderProps(className, [\n        focusVisibleStyles,\n        disabledStyles,\n        \"flex flex-1 items-start justify-between gap-4 rounded-md py-4 text-left text-sm font-medium transition-all data-hovered:underline\",\n      ])}\n      {...props}\n    >\n      {(renderProps) => (\n        <>\n          {typeof children === \"function\" ? children(renderProps) : children}\n          <ChevronDown className=\"pointer-events-none size-4 shrink-0 translate-y-0.5 text-muted-foreground transition-transform duration-200 group-data-expanded:rotate-180\" />\n        </>\n      )}\n    </Rac.Button>\n  );\n}\n\n/**\n * Derived from shadcn AccordionContent.\n *\n * `Rac.DisclosurePanel` adds a `hidden` attribute when collapsed, preventing\n * exit animations.\n */\nexport function DisclosurePanel({\n  className,\n  children,\n  ...props\n}: Rac.DisclosurePanelProps) {\n  return (\n    <Rac.DisclosurePanel\n      className={composeTailwindRenderProps(\n        className,\n        \"grid grid-rows-[0fr] text-sm transition-[grid-template-rows] duration-200 ease-out group-data-expanded:grid-rows-[1fr]\",\n      )}\n      {...props}\n    >\n      <div className=\"overflow-hidden\">\n        <div className=\"pt-0 pb-4\">{children}</div>\n      </div>\n    </Rac.DisclosurePanel>\n  );\n}\n",
      "type": "registry:ui"
    }
  ],
  "meta": {
    "tags": [
      "disclosure",
      "heading"
    ]
  }
}