{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "oui-modal-ex-sheet",
  "type": "registry:component",
  "registryDependencies": [
    "https://oui.mw10013.workers.dev/r/oui-modal.json"
  ],
  "files": [
    {
      "path": "registry/components/oui-modal-ex-sheet.tsx",
      "content": "import type { VariantProps } from \"class-variance-authority\";\nimport { Label } from \"@/registry/components/ui/oui-label\";\nimport { Link } from \"@/registry/components/ui/oui-link\";\nimport { Modal, ModalOverlay } from \"@/registry/components/ui/oui-modal\";\nimport { Text } from \"@/registry/components/ui/oui-text\";\nimport { cva } from \"class-variance-authority\";\nimport * as Rac from \"react-aria-components\";\nimport { twMerge } from \"tailwind-merge\";\n\n/**\n * Derived from shadcn SheetContent.\n * Merges with modalStyles so resets zoom and positioning.\n */\nexport const sheetModalVariants = cva(\n  [\n    \"fixed top-auto left-auto z-50 flex max-w-none translate-x-0 translate-y-0 flex-col gap-4 rounded-none bg-background shadow-lg transition ease-in-out sm:max-w-none\",\n    \"data-[entering]:animate-in data-[entering]:duration-500 data-[entering]:zoom-in-100\",\n    \"data-[exiting]:animate-out data-[exiting]:duration-300 data-[exiting]:fill-mode-forwards data-[exiting]:zoom-out-100\",\n  ],\n  {\n    variants: {\n      side: {\n        right:\n          \"inset-y-0 right-0 h-full w-3/4 border-l data-[entering]:slide-in-from-right data-[exiting]:slide-out-to-right sm:max-w-sm\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[entering]:slide-in-from-left data-[exiting]:slide-out-to-left sm:max-w-sm\",\n        top: \"inset-x-0 top-0 h-auto border-b data-[entering]:slide-in-from-top data-[exiting]:slide-out-to-top\",\n        bottom:\n          \"inset-x-0 bottom-0 h-auto border-t data-[entering]:slide-in-from-bottom data-[exiting]:slide-out-to-bottom\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  },\n);\n\nexport interface ModalExSheetProps\n  extends Rac.ModalOverlayProps,\n    Pick<VariantProps<typeof sheetModalVariants>, \"side\"> {\n  overlayClassName?: Rac.ModalOverlayProps[\"className\"];\n}\n\n/**\n * A modal that slides in from an edge of the screen, suitable for a \"Sheet\" component.\n * Derived from shadcn SheetContent.\n * @param side - The side of the screen from which the modal will enter.\n */\nexport function ModalExSheet({\n  className,\n  overlayClassName,\n  children,\n  side,\n  ...props\n}: ModalExSheetProps) {\n  return (\n    <ModalOverlay className={overlayClassName} {...props}>\n      <Modal\n        className={Rac.composeRenderProps(className, (className, renderProps) =>\n          twMerge(sheetModalVariants({ ...renderProps, side, className })),\n        )}\n      >\n        {children}\n      </Modal>\n    </ModalOverlay>\n  );\n}\n\nexport default function Component() {\n    return (\n    <div className=\"grid gap-2\">\n      <Label>ModalExSheet</Label>\n      <Text slot=\"description\">\n        A reusable wrapper that extends{\" \"}\n        <Link\n          href=\"https://react-spectrum.adobe.com/react-aria/Modal.html\"\n          underline=\"always\"\n        >\n          Modal\n        </Link>{\" \"}\n        to display content that complements the main content of the screen â€” see{\" \"}\n        <Link\n          href=\"https://oui.mw10013.workers.dev/filter?tags=modal-ex-sheet\"\n          underline=\"always\"\n        >\n          Uses\n        </Link>\n        .\n      </Text>\n    </div>\n  );\n}\n",
      "type": "registry:component"
    }
  ],
  "meta": {
    "tags": [
      "modal",
      "modal-ex-sheet",
      "sheet"
    ]
  }
}