{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "toggle-button",
  "type": "registry:ui",
  "title": "Toggle Button",
  "description": "React aria components Toggle Button with shadcn characteristics.",
  "dependencies": [
    "react-aria-components",
    "class-variance-authority"
  ],
  "registryDependencies": [
    "@oui/base"
  ],
  "files": [
    {
      "path": "registry/default/ui/oui-toggle-button.tsx",
      "content": "\"use client\";\n\nimport type { VariantProps } from \"class-variance-authority\";\nimport {\n  disabledStyles,\n  focusVisibleStyles,\n} from \"@/registry/default/ui/oui-base\";\nimport { cva } from \"class-variance-authority\";\nimport * as Rac from \"react-aria-components\";\n\n/**\n * Derived from shadcn Toggle.\n * Rac.ToggleButton does not support aria-invalid or have data-invalid.\n */\nexport const toggleButtonVariants = cva(\n  [\n    focusVisibleStyles,\n    disabledStyles,\n    \"group inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium whitespace-nowrap transition-[color,box-shadow] data-hovered:bg-muted data-hovered:text-muted-foreground data-selected:bg-accent data-selected:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n  ],\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent shadow-xs data-hovered:bg-accent data-hovered:text-accent-foreground\",\n        ghost:\n          \"data-hovered:bg-accent data-hovered:text-accent-foreground data-selected:bg-transparent data-selected:text-inherit dark:data-hovered:bg-accent/50\",\n      },\n      size: {\n        default: \"h-9 min-w-9 px-2\",\n        sm: \"h-8 min-w-8 px-1.5\",\n        lg: \"h-10 min-w-10 px-2.5\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n);\n\nexport interface ToggleButtonProps\n  extends Rac.ToggleButtonProps,\n    VariantProps<typeof toggleButtonVariants> {}\n\nexport function ToggleButton({\n  className,\n  variant,\n  size,\n  ...props\n}: ToggleButtonProps) {\n  return (\n    <Rac.ToggleButton\n      data-slot=\"toggle-button\"\n      className={Rac.composeRenderProps(className, (className, renderProps) =>\n        toggleButtonVariants({\n          ...renderProps,\n          variant,\n          size,\n          className,\n        }),\n      )}\n      {...props}\n    />\n  );\n}\n",
      "type": "registry:ui"
    }
  ],
  "meta": {
    "tags": [
      "toggle-button"
    ]
  }
}