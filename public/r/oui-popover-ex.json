{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "oui-popover-ex",
  "type": "registry:component",
  "registryDependencies": [
    "https://oui.mw10013.workers.dev/r/oui-button.json",
    "https://oui.mw10013.workers.dev/r/oui-dialog.json",
    "https://oui.mw10013.workers.dev/r/oui-popover.json",
    "https://oui.mw10013.workers.dev/r/oui-label.json",
    "https://oui.mw10013.workers.dev/r/oui-link.json",
    "https://oui.mw10013.workers.dev/r/oui-text.json"
  ],
  "files": [
    {
      "path": "registry/components/oui-popover-ex.tsx",
      "content": "import { Button } from \"@/registry/components/ui/oui-button\";\nimport { Dialog } from \"@/registry/components/ui/oui-dialog\";\nimport { Label } from \"@/registry/components/ui/oui-label\";\nimport { Link } from \"@/registry/components/ui/oui-link\";\nimport { Popover } from \"@/registry/components/ui/oui-popover\";\nimport { Text } from \"@/registry/components/ui/oui-text\";\nimport * as Rac from \"react-aria-components\";\n\nexport interface PopoverExProps extends Omit<Rac.PopoverProps, \"children\"> {\n  triggerElement: string | React.ReactElement;\n  dialogClassName?: string;\n  children?: Rac.DialogProps[\"children\"];\n}\n\n/**\n * A popover dialog.\n * If `triggerElement` is a string, it's rendered as a ghost `Button`.\n * The dialog is dismissable via an outside press if `role` is not \"alertdialog\".\n */\nexport function PopoverEx({\n  triggerElement,\n  dialogClassName,\n  children,\n  ...props\n}: PopoverExProps) {\n  return (\n    <Rac.DialogTrigger>\n      {typeof triggerElement === \"string\" ? (\n        <Button variant=\"ghost\">{triggerElement}</Button>\n      ) : (\n        triggerElement\n      )}\n      <Popover {...props}>\n        <Dialog className={dialogClassName} hideCloseButtonForNonAlert>\n          {children}\n        </Dialog>\n      </Popover>\n    </Rac.DialogTrigger>\n  );\n}\n\nexport default function Component() {\n  return (\n    <div className=\"grid gap-2\">\n      <Label>PopoverEx</Label>\n      <Text slot=\"description\">\n        A reusable wrapper for{\" \"}\n        <Link\n          href=\"https://react-spectrum.adobe.com/react-aria/Popover.html\"\n          underline=\"always\"\n        >\n          Popover\n        </Link>{\" \"}\n        â€” see{\" \"}\n        <Link\n          href=\"https://oui.mw10013.workers.dev/filter?tags=popover-ex\"\n          underline=\"always\"\n        >\n          Uses\n        </Link>\n        .\n      </Text>\n    </div>\n  );\n}\n",
      "type": "registry:component"
    }
  ],
  "meta": {
    "tags": [
      "popover",
      "popover-ex",
      "dialog"
    ]
  }
}