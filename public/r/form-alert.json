{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "form-alert",
  "type": "registry:component",
  "title": "Form Alert",
  "description": "Displays an alert based on a form action result.",
  "dependencies": [
    "react-aria-components"
  ],
  "registryDependencies": [
    "alert"
  ],
  "files": [
    {
      "path": "registry/default/components/oui-form-alert.tsx",
      "content": "import {\n  Alert,\n  AlertDescription,\n  AlertTitle,\n} from \"@/registry/default/ui/alert\";\nimport * as Rac from \"react-aria-components\";\n\nexport interface FormActionResult {\n  success: boolean;\n  message?: string;\n  details?: string | string[];\n  validationErrors?: Rac.FormProps[\"validationErrors\"];\n}\n\n/**\n * Displays an alert based on form action result.\n * @param props - Component props including success, message, details.\n */\nexport function FormAlert({\n  success,\n  message,\n  details,\n  className,\n  ...props\n}: React.ComponentProps<typeof Alert> &\n  Partial<Pick<FormActionResult, \"success\" | \"message\" | \"details\">>) {\n  const detailsArray = Array.isArray(details)\n    ? details\n    : details\n      ? [details]\n      : [];\n  if (success === undefined) return null;\n  if (!message && detailsArray.length === 0) return null;\n\n  return (\n    <Alert\n      variant={success ? \"default\" : \"destructive\"}\n      className={className}\n      {...props}\n    >\n      {message && <AlertTitle>{message}</AlertTitle>}\n      {detailsArray.length > 0 && (\n        <AlertDescription>\n          {detailsArray.map((detail, i) => (\n            <div key={i}>{detail}</div>\n          ))}\n        </AlertDescription>\n      )}\n    </Alert>\n  );\n}\n",
      "type": "registry:component"
    }
  ],
  "meta": {
    "tags": [
      "form-alert"
    ]
  }
}