{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "oui-list-box-ex-pagination",
  "type": "registry:component",
  "registryDependencies": [
    "@oui/oui-button",
    "@oui/oui-label",
    "@oui/oui-link",
    "@oui/oui-text"
  ],
  "files": [
    {
      "path": "registry/default/components/oui-list-box-ex-pagination.tsx",
      "content": "\"use client\";\n\nimport { composeTailwindRenderProps } from \"@/registry/default/ui/oui-base\";\nimport { buttonVariants } from \"@/registry/default/ui/oui-button\";\nimport { Label } from \"@/registry/default/ui/oui-label\";\nimport { Link } from \"@/registry/default/ui/oui-link\";\nimport { Text } from \"@/registry/default/ui/oui-text\";\nimport * as Rac from \"react-aria-components\";\nimport { twMerge } from \"tailwind-merge\";\n\n/**\n * Experimental ListBox reusable wrapper for pagination controls\n */\n\nexport function ListBoxExPagination<T extends object>({\n  className,\n  \"aria-label\": ariaLabel = \"Pagination\",\n  ...props\n}: Rac.ListBoxProps<T>) {\n  return (\n    <nav aria-label=\"pagination\" className=\"mx-auto flex w-full justify-center\">\n      <Rac.ListBox\n        aria-label={ariaLabel}\n        orientation=\"horizontal\"\n        selectionMode=\"single\"\n        className={composeTailwindRenderProps(\n          className,\n          \"flex flex-row items-center gap-1\",\n        )}\n        {...props}\n      />\n    </nav>\n  );\n}\n\n/**\n * Pagination item styled as a button. Selected items use outline variant, others use ghost.\n */\nexport function ListBoxItemExPagination<T extends object>({\n  className,\n  children,\n  ...props\n}: Rac.ListBoxItemProps<T>) {\n  return (\n    <Rac.ListBoxItem\n      {...props}\n      textValue={\n        props.textValue ??\n        (typeof children === \"string\"\n          ? children\n          : typeof children === \"number\"\n            ? String(children)\n            : undefined)\n      }\n      className={Rac.composeRenderProps(className, (className, renderProps) =>\n        twMerge(\n          \"cursor-pointer\",\n          buttonVariants({\n            ...renderProps,\n            variant: renderProps.isSelected ? \"outline\" : \"ghost\",\n            className,\n          }),\n        ),\n      )}\n    >\n      {children}\n    </Rac.ListBoxItem>\n  );\n}\n\nexport default function Component() {\n  return (\n    <div className=\"grid gap-2\">\n      <Label>ListBoxExPagination</Label>\n      <Text slot=\"description\">\n        A reusable wrapper that extends{\" \"}\n        <Link\n          href=\"https://react-spectrum.adobe.com/react-aria/ListBox.html\"\n          underline=\"always\"\n        >\n          ListBox\n        </Link>{\" \"}\n        for pagination controls â€” see{\" \"}\n        <Link\n          href=\"https://oui.mw10013.workers.dev/filter?tags=list-box-ex-pagination\"\n          underline=\"always\"\n        >\n          Uses\n        </Link>\n        .\n      </Text>\n    </div>\n  );\n}\n",
      "type": "registry:component"
    }
  ],
  "meta": {
    "tags-": [
      "list-box",
      "list-box-ex-pagination"
    ],
    "canPreview": true,
    "canOpenInV0": true
  }
}